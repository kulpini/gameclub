<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DeleteButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACIAAAAiCAYAAAA6RwvCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAcgSURBVFhH1dd9VFRlHgfw6/Aa2qzNotA4wUg4jiMhayMZAaKiIhoKjOM5HiRXbSJSRCIhDchs
        N3vZVTM1VEJkEcQjZmhoirK6SgMOr1LKizCAAsJEJitSe/bZ7+9yqcHTHOkP2vqd8znPvDz3eb7z3Huf
        OZcbzkrWqOSgTtKoFqLVJYdP0vGtRrWMPgdPoevwFib6bQRJXKTwhZXgvzF0onRTqNIRk496ffFEN+Fz
        rdB1eAsTzYKohJAJPiAGe/7zEIWUPocIvuNwV/yCJ93Ae/388YGxQXLNunmu09cEyhzWB8nFCCFNWKQY
        K3Qd3kIA59j5cgVCBEE0ggQhiJjCCF1+nUIQexCvneuiWDvniYDo2eMCXwp4PBh8VvmOsSdC11+nMLEk
        aqZUgTYAYnQznLUIIV71nOMoocvQK0Wjsk1ZMlkCUpg6RCocp8BFKkMQyYv+TsrVfk7BCBEU+cxjATBd
        GH7ohQHFGNgd1KAbIi2OW5iyRKWgMV6YLhGDEgF8IC7S+7HV/OBDqaQwlS2Ik8JVcvA/kLJcqz+emtFv
        L680P02wT7A/o/TE/oxDf9XFYd/QggeNhRAO4BwxbbTXMrU4Dn5BkHCVBNyTwif5o406mZq07YfuFkb+
        8+1N3n/v3u73XVu/u+2M9XSwks/2ZdAxoBaG42uJ10gZxGu8RuqEjyzX66FK242hSgfshvJNYZO8P0mK
        0FKIslMHj3xvamL3OxtZd/PXvFu15TyTsQbvv2KdN6pYR0MFK0h/JzN2nusaXB+BISprlxCVDVi7hHrY
        eWmmOOhgmTCd5UIQZ2zLCrRBCBR9KW935vfdrazPZGS97dfYneYqpj9zlJe+LYVXmHeAXcjPYsfSt7Hc
        1K1sc1TIYUy+4WdELVLZ+oZMthm0UoMqIURhTfB/4AKeO9bO1+5N1L5RdirzGIW439X4Y5Di07k8hGgk
        BTmpP3xxJI2dyPyIHc/Ywbau0x4O87SPX+xhF0OTm1lGIRDG8p8eQshAseH5CWFo11SezTl5v6uJ3Wuv
        ZXebK1lPSzXr7ahl3cYqdubIXp5wKLc1QdcIrOJiAU5NFTud8V4mjQHeQpeh1/89SBz+oF5d4K6ACIip
        /fJz/b2OevZdy1XWfcPAu9NUzu4YK1hP61W0layh7DxPfyqHV2c4x25UXGA97XW4m1rZhdydWTQW/I6C
        rAtycxesgKh6fYGhq95g6qq/0tdVV8q66kuZCb5puDI4EB+qsl9zNa+ntYb13KxhfbigaZ85n709G2PG
        wcO38nXzxit5CEEHNVcW1fXcusa+uVHGOmv1rKuuhA9CHgxCK0PomuHhbroPtM8MDjL+4UFemeO6kly/
        nG9oKjvb0P715d7bCNBx/UvWca2Y3UY7KFCDWSCcJv5U4QImdGvTLX7pWOrx7A/W79m5dnHEa34yH3AR
        prNc0XNc4wkmNtH1QAHavrrEEKg/yLX+IMTSytDdRCgEbXrZH8TtwY+Lj/WXBW5SOynBUZjOcr0822Uu
        +XR3UvqJfW8daaks6jThtNBKDAr0wMqYXzN0a5PLbycaz70a1XBwyoTC3X985HjaSJu0gzaibf8QjXj3
        EMdtzgZqzbwBKwgXNesJFXlppiwGEhuvfNFAK9NZWzIoCLG0MrTPkAxvVfmHYx30B+ysqrOsRDWHRnDl
        mNwwABP++Fp4X5zFcamEgowluoBxwS8GjAsrSN+aefHonsLGsrNtuHOwEno+DKFVIV11WBkEocCkOD+9
        kKS6Ohk+GmVTfnHypJZKtbqjSq1uq1arb1pS5unZmMZx+UQ4QRy3yl/qDqqV/lIdbKw8l2ugSSgMrQwx
        Xxm6tWmfIdSffGhnpd+NlTAGz/93b2Qk612+nFF7j16bvR9g0mj6PsbKECEGx630k45d5SeV/tnv8YUQ
        cSrjvayKsznljYYzbXSaaCX404SWv7XrSvuqi/LKCfUnf7MR5W8XjTh/YepUY8WMGaaHKXn22Zs7OO40
        EWL8VC885yQHj0gfpxWQXJS76zytDF3AtCp0qmifuV1b2k3fE+pP3hJx72/B+X6T4/4JhiEopv5EmJ4v
        EQl/2lGmUTsqlk5z1CydNiY2b8+bh68Xf25sKis00WrcqrnUW1dy2lhVlFe91HtMDMExCpIs4tZg8A3J
        HLcziePS0O4bkPIA9CO73sa/C+mP0F+2QM8ZYhj91Dh7L7WLw6x5qkdXh3r94d1Df084SStDoej9Ik/x
        ZrWrQwBBf4mAjiX0AEVoPBrX2gz/g8Fi0UFkNEiUznaeU2SPBMyeOGrF80+Jt+z/S8zR1qv/umM4k1OD
        95sXeDyaiO99CfrThkXoWELPK2QgiHkYi0EGvqAD6ddIgbZkegTwcBw5wl8usQr7k9Q6eqabzS5fufWW
        8RKrEJfRomB8rxS4CWQCeqYdCEZjmof6LQfhuP8B5FPG1JkmIJwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="AddButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAKVSURBVFhHxdZfSFNRHAfwS7oIk2UXRRyW/y9j+uCDUJSJkwKjmGn5qpAxl4mVWYqQQr1YFEHg
        w6ywh4L+0FMvgS8hhIy4rUJDRE3UsmU105FS0mnfX78zYmhb0Ha/8Hm455x7zhd2D0yJVbqO2EqYMwyN
        87LYRR7Eh8a/QEeV5oJ2R4EZeDg0zo+xi+EFTu/P0eBUZXYTNO/NNANPxz6GF5Bx2S0aNJZntEBDaZoZ
        eDr2+W8FumsL85kzSgeBX1fqd6pWqNuxtRV4OPoENzOmwPnDtnzmgh/+GQGrC+/Iz6WPvy3OERHwEbme
        twmltnhzG/Bj5PDh8S/QWW3VWBN8988KWP4wSjwDj0j/tW4y+PgueeDuIQ6b6dxaqgo3lgIfs34MK9Du
        0DTWDCufpgQsTb8iy74xMvCwj/BrSk+7U4Bv4jWR7/N09OHD41/gzIF8jbXAN9+4AP+kTr5OeUlgdphM
        vHhKPE/ukcmXg2R1YZbIfXj7yOHD41/gZGWulbVC4P2ogPkxD/k8/pysV0T+JCvBDxPkNS24nDEEyv00
        nblJeAwvcGJfVhsszgwLmHvzjPhGh0ikIvLjlNdU7pd4O3UEjn05K0C5k6qT8BhewFWxzQaN9swO+Nci
        8prmdad5ILFPHQHllqpD7bxTgHwOuam6ieEFZBrKLDY4WmbphEhF5DWV6xOvp4yAfa5GREPpTdGJjOEF
        ZOp3pxdB3a70LggvIq+pnJfrlatmN7li1v9UNL1HQPh4aH14jCywiaVASVZSBVQXb7kEsoh8Ds6VQ3Ct
        yvBHE5LIhWQvWN4WClAuJuvkLzGswAYmN9jOiiBbTagBe56pF3LUBAcE56wsl2WyVHLI1E+Om7yk2nSD
        rBEDCyjKL0p1KpilDRhhAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAqAAAAJgAAABQAAAAIAAAAGgAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA8AAAAoQAAAOEAAADZAAAAowAA
        AFYAAABwAAAAZAAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAARgAAAMsAAAD7AAAA/wAA
        AP8AAAD/AAAA2wAAAGoAAACXAAAAegAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAADTAAAA/QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA0wAAAHAAAACrAAAAagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA6AAAA7wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2QAAAHAAAADDAAAASAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAASgAA
        ANcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAuwAAAFoAAACrAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AEoAAADPAAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD1AAAANAAA
        ALkAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA+AAAA1wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOcAAAAwAAAAvQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAPgAAAO8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADvAAAAfAAAAHwAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADAAAADRAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA8QAAAJcAAAB8AAAAmwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAhwAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACPAAAAegAAAJEAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAACfAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAlwAAAGYAAACfAAAAKgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAADrAAAA/wAAAP8AAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA8QAAAIsAAABiAAAAqwAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAJEAAAD7AAAA0wAA
        AJ0AAADpAAAA/wAAAP8AAAD/AAAA/wAAAPEAAACPAAAAbAAAAKEAAAAeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4AAAB0AAAALgAA
        AJ8AAACNAAAAEAAAAMMAAAD/AAAA/wAAAP8AAAD/AAAAhwAAAGgAAACVAAAAMgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACbAAAAbAAA
        ACYAAAAIAAAAIAAAAIcAAADBAAAA8QAAAP8AAAD/AAAA/wAAAJEAAABSAAAAoQAAADQAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAmwAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAALgAAAIsAAADlAAAA+wAAAOkAAACFAAAASgAAAK8AAAAoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADAAAABsAAAAAAAAAAAAAAAAAAAAAAAAACoAAAB8AAAACgAAAFYAAACLAAAAWgAAAB4AAABkAAAAJgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAdAAAACYAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEQAAABaAAAACAAAAAAAAAAAAAAAAAAAAIUAAACNAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAFwAAAAyAAAAMgAAAFwAAAClAAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAJUAAACVAAAATAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////h////wL///4Bf//8AL//+ABf//A
        AX//gAF//wAD//4AAv/8AAX//AAL//4AF//+AC///yBf//eAv//vwX////f////////+f////f///+f/
        //////////////////////////////////8=
</value>
  </data>
</root>